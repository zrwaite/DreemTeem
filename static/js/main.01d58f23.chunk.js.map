{"version":3,"sources":["User.tsx","getcookie.tsx","assets/logo.svg","components/Navbar.tsx","assets/dashboard_screenshot.png","components/Hero.tsx","components/AboutCard.tsx","assets/zac.jpg","assets/george.jpg","assets/steven.jpg","assets/hargun.jpg","assets/michael.jpg","components/About.tsx","pages/Landing.tsx","pages/ViewThreat.tsx","components/dashboard/GeneralLineChart.tsx","components/dashboard/SensorGraphs.tsx","components/dashboard/LiveDetection.tsx","components/dashboard/IntrusionDetectionArea.tsx","components/dashboard/ChartsGroup.tsx","pages/dashboard/Home.tsx","components/dashboard/SettingsTable.tsx","pages/dashboard/Settings.tsx","assets/imageintruders1.jpg","assets/doorsensor.jpg","assets/windowsensor.jpg","pages/dashboard/WikiIntruders.tsx","assets/imageplant1.jpg","assets/imageplant2.jpg","assets/imageplant3.jpg","assets/imageplant4.jpg","assets/imageplant5.jpg","assets/imageplant6.jpg","pages/dashboard/WikiPlant.tsx","assets/imagesensors1.jpg","pages/dashboard/WikiSensors.tsx","components/dashboard/Sidebar.tsx","pages/Dashboard.tsx","pages/SignIn.tsx","pages/SignUp.tsx","App.tsx","reportWebVitals.ts","index.tsx","colors.ts"],"names":["initialState","currentPage","defaultValue","UserContext","createContext","getcookie","cookie","disable_alternate","cookies","Cookies","get","Navbar","history","useHistory","bg","useColorModeValue","toggleMode","useColorMode","toggleColorMode","text","SwitchIcon","FaMoon","FaSun","ic","hbg","tcl","dcl","hbgh","Section","props","m","p","display","alignItems","rounded","_hover","svg","flexShrink","h","w","color","xmlns","fill","viewBox","stroke","icon","ml","fontSize","fontWeight","title","mt","children","Features","columns","base","md","lg","pos","gap","sm","px","py","strokeLinecap","strokeLinejoin","d","description","direction","spacing","span","header","justifyContent","mx","href","align","src","logo","alt","width","height","role","left","_groupHover","colorScheme","variant","size","onClick","push","Hero","xl","textAlign","h1","mb","lineHeight","letterSpacing","bgClip","bgGradient","as","cursor","boxSize","fillRule","clipRule","window","open","shadow","dashboard_screenshot","AboutCard","my","overflow","minWidth","maxWidth","fit","objectPosition","image","role_emoji","emoji_color","role_description","name","FaUniversity","mr","university","MdEmail","email","About","flexWrap","HiOutlineSparkles","zac","george","steven","hargun","michael","Landing","ViewThreat","GeneralLineChart","sx","LineChart","data","margin","top","right","bottom","lines","map","line","Line","type","dataKey","key","yAxisId","yAxisKey","CartesianGrid","strokeDasharray","XAxis","xAxisKey","YAxis","orientation","tick","yAxisColours","Tooltip","Legend","SensorGraphs","useState","updatedAt","CurrentData","setCurrentData","temperature","humidity","light_level","DailyData","setDailyData","getData","axios","then","res","current_data","response","result","updated_data","daily_data","set","console","log","length","slice","last_temperature","last_humidity","last_light_level","i","undefined","catch","err","useEffect","handle","setInterval","clearInterval","style","gridTemplateColumns","gridGap","LiveDetection","DateTime","setDateTime","light_on","moisture","num_waters","PlantModuleData","setPlantModuleData","GetCurrentDateTime","date_obj","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","days","months","non_24_hour_time","actual_hr","actual_min","actual_sec","toString","getDay","GetPlantModuleData","handledate","handleplants","pb","minHeight","overflowY","overflowX","textDecor","MdSensors","MdDeviceThermostat","MdWhatshot","MdOutlineWbSunny","isIndeterminate","MdPersonSearch","MdAlarm","alert_level","MdManageSearch","detection_level","MdOutlineYard","MdLightbulbOutline","MdOutlineWaterDrop","MdWater","IntrusionDetectionArea","detection","convertDate","date","maxHeight","position","item","reverse","index","ChartsGroup","Home","toast","useToast","setTimeout","status","duration","isClosable","SettingsTable","colorMode","EmailNotifications","setEmailNotifications","IntrusionDetection","setIntrusionDetection","SafetyLevel","setSafetyLevel","getOppositeColorMode","forceColorModeUpdate","received_color_mode","settings","dark_mode","forceEmailNotificationsUpdate","received_email_notifications","email_notifications","forceIntrusionDetectionUpdate","received_intrusion_detection","intrusion_detection","received_safety_level","safety_level","x","token","tid","Object","keys","Fragment","textTransform","fontFamily","isChecked","onChange","put","username","id","min","max","val","Settings","WikiIntruders","flexDirection","imageintruders1","doorsensor","windowsensor","WikiPlant","frameBorder","allow","allowFullScreen","imageplant3","imageplant1","imageplant2","imageplant4","imageplant5","imageplant6","WikiSensors","imagesensors1","Sidebar","sidebar","useDisclosure","integrations","match","useRouteMatch","user","useContext","Notifications","setNotifications","getNotifications","received_notifs","notifications","notif","read","info","handlenotifs","NavItem","rest","pl","transition","page","onToggle","url","MdKeyboardArrowRight","SidebarContent","zIndex","borderColor","borderRightWidth","MdHome","HiCode","transform","isOpen","in","BsGearFill","minH","onClose","placement","borderRight","justify","borderBottomWidth","onOpen","placeholder","closeOnBlur","MdNotifications","pt","border","notification","_id","MdPerson","remove","path","Dashboard","SignIn","Email","setEmail","Password","setPassword","colSpan","borderBottom","isRequired","e","target","value","autoComplete","preventDefault","post","password","decoded","jwt_decode","home_id","defaults","headers","common","module_list","modules","forEach","module","module_id","handleSubmit","a","SignUp","Name","setName","HomeID","setHomeID","userResult","App","interval","className","User","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","colors","transparent","current","black","white","brand","brandOld","whiteAlpha","blackAlpha","gray","red","orange","yellow","green","teal","blue","cyan","purple","pink","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01d58f23.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst initialState = {\n  currentPage: \"home\",\n  defaultValue: \"\",\n};\n\nconst UserContext = createContext(initialState);\nexport default UserContext;\n","import Cookies from \"universal-cookie\";\n\nfunction getcookie(cookie: string, disable_alternate: boolean) {\n  const cookies = new Cookies();\n  if (cookies.get(cookie)) {\n    return cookies.get(cookie);\n  } else if (!disable_alternate) {\n    switch (cookie) {\n      case \"token\":\n        return \"...\";\n      case \"name\":\n        return \"George\"\n      case \"email\":\n        return \"GeorgeShao246@gmail.com\";\n      case \"home_id\":\n        return \"61870da5d98c502cf04c576c\";\n      case \"sensors_id\":\n        return \"61870da5d98c502cf04c5770\";\n      case \"intruders_id\":\n        return \"6196f37d29168d65cb1d2adb\";\n      default:\n        return \"...\";\n    }\n  } else {\n    return \"...\";\n  }\n}\n\nexport default getcookie;\n","export default __webpack_public_path__ + \"static/media/logo.ed8df876.svg\";","import React from \"react\";\nimport {\n  chakra,\n  Flex,\n  HStack,\n  Link,\n  Button,\n  useColorModeValue,\n  Box,\n  Spacer,\n  IconButton,\n  SimpleGrid,\n  Stack,\n  useColorMode,\n  Text,\n} from \"@chakra-ui/react\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport logo from \"../assets/logo.svg\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Navbar() {\n  let history = useHistory();\n\n  const bg = useColorModeValue(\"white\", \"gray.800\");\n  const { toggleColorMode: toggleMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const ic = useColorModeValue(\"brand.600\", \"brand.50\");\n  const hbg = useColorModeValue(\"gray.50\", \"brand.400\");\n  const tcl = useColorModeValue(\"gray.900\", \"gray.50\");\n  const dcl = useColorModeValue(\"gray.500\", \"gray.50\");\n  const hbgh = useColorModeValue(\"gray.100\", \"brand.500\");\n\n  const Section = (props: any) => {\n    return (\n      <Link\n        m={-3}\n        p={3}\n        display=\"flex\"\n        alignItems=\"start\"\n        rounded=\"lg\"\n        _hover={{ bg: hbg }}\n      >\n        <chakra.svg\n          flexShrink={0}\n          h={6}\n          w={6}\n          color={ic}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          {props.icon}\n        </chakra.svg>\n        <Box ml={4}>\n          <chakra.p fontSize=\"sm\" fontWeight=\"700\" color={tcl}>\n            {props.title}\n          </chakra.p>\n          <chakra.p mt={1} fontSize=\"sm\" color={dcl}>\n            {props.children}\n          </chakra.p>\n        </Box>\n      </Link>\n    );\n  };\n\n  const Features = (\n    <>\n      <SimpleGrid\n        columns={{ base: 1, md: 3, lg: 5 }}\n        pos=\"relative\"\n        gap={{ base: 6, sm: 8 }}\n        px={5}\n        py={6}\n      >\n        <Section\n          title=\"Analytics\"\n          icon={\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              stroke-w=\"2\"\n              d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n            />\n          }\n        >\n          Get a better understanding of where your traffic is coming from.\n        </Section>\n\n        <Section\n          title=\"Engagement\"\n          icon={\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              stroke-w=\"2\"\n              d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n            />\n          }\n        >\n          Speak directly to your customers in a more meaningful way.\n        </Section>\n\n        <Section\n          title=\"Security\"\n          icon={\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              stroke-w=\"2\"\n              d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n            />\n          }\n        >\n          Your customers&#039; data will be safe and secure.\n        </Section>\n\n        <Section\n          title=\"Integrations\"\n          description={\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              stroke-w=\"2\"\n              d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\n            />\n          }\n        >\n          Connect with third-party tools that you&#039;re already using.\n        </Section>\n\n        <Section\n          title=\"Automations\"\n          icon={\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              stroke-w=\"2\"\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n            />\n          }\n        >\n          Build strategic funnels that will drive your customers to convert\n        </Section>\n      </SimpleGrid>\n      <Box px={{ base: 5, sm: 8 }} py={5} bg={hbg} display={{ sm: \"flex\" }}>\n        <Stack direction={{ base: \"row\" }} spacing={{ base: 6, sm: 10 }}>\n          <Box display=\"flow-root\">\n            <Link\n              m={-3}\n              p={3}\n              display=\"flex\"\n              alignItems=\"center\"\n              rounded=\"md\"\n              fontSize=\"md\"\n              color={tcl}\n              _hover={{ bg: hbgh }}\n            >\n              <chakra.svg\n                flexShrink={0}\n                h={6}\n                w={6}\n                color=\"gray.400\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  stroke-w=\"2\"\n                  d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\n                />\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  stroke-w=\"2\"\n                  d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </chakra.svg>\n              <chakra.span ml={3}>Watch Demo</chakra.span>\n            </Link>\n          </Box>\n\n          <Box display=\"flow-root\">\n            <Link\n              m={-3}\n              p={3}\n              display=\"flex\"\n              alignItems=\"center\"\n              rounded=\"md\"\n              fontSize=\"md\"\n              color={tcl}\n              _hover={{ bg: hbgh }}\n            >\n              <chakra.svg\n                flexShrink={0}\n                h={6}\n                w={6}\n                color=\"gray.400\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  stroke-w=\"2\"\n                  d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\n                />\n              </chakra.svg>\n              <chakra.span ml={3}>Contact Sales</chakra.span>\n            </Link>\n          </Box>\n        </Stack>\n      </Box>\n    </>\n  );\n\n  // const MobileNavContent = (\n  //   <VStack\n  //     pos=\"absolute\"\n  //     top={0}\n  //     left={0}\n  //     right={0}\n  //     display={mobileNav.isOpen ? \"flex\" : \"none\"}\n  //     flexDirection=\"column\"\n  //     p={2}\n  //     pb={4}\n  //     m={2}\n  //     bg={bg}\n  //     spacing={3}\n  //     rounded=\"sm\"\n  //     shadow=\"sm\"\n  //   >\n  //     <CloseButton\n  //       aria-label=\"Close menu\"\n  //       justifySelf=\"self-start\"\n  //       onClick={mobileNav.onClose}\n  //     />\n  //     <Button w=\"full\" variant=\"ghost\" leftIcon={<AiFillHome />}>\n  //       Dashboard\n  //     </Button>\n  //     <Button\n  //       w=\"full\"\n  //       variant=\"solid\"\n  //       colorScheme=\"brand\"\n  //       leftIcon={<AiOutlineInbox />}\n  //     >\n  //       Inbox\n  //     </Button>\n  //     <Button w=\"full\" variant=\"ghost\" leftIcon={<BsFillCameraVideoFill />}>\n  //       Videos\n  //     </Button>\n  //   </VStack>\n  // );\n\n  return (\n    <>\n      <chakra.header h=\"full\" bg={bg} w=\"full\" px={{ base: 4, sm: 4 }} py={4}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mx=\"auto\">\n          <Link display=\"flex\" alignItems=\"center\" href=\"/\">\n            <Flex align=\"center\">\n              <img src={logo} alt=\"logo\" width=\"48\" height=\"48\" />\n              <Text\n                fontSize=\"2xl\"\n                ml=\"2\"\n                color={useColorModeValue(\"brand.500\", \"white\")}\n                fontWeight=\"semibold\"\n              >\n                HomeNode\n              </Text>\n            </Flex>\n          </Link>\n          <Box display={{ base: \"none\", md: \"inline-flex\" }}>\n            <HStack spacing={1}>\n              <Box role=\"group\">\n                {/* <Button\n                  bg={bg}\n                  color=\"gray.500\"\n                  alignItems=\"center\"\n                  fontSize=\"md\"\n                  _hover={{ color: cl }}\n                  _focus={{ boxShadow: \"none\" }}\n                  rightIcon={<IoIosArrowDown />}\n                >\n                  Features\n                </Button> */}\n                <Box\n                  pos=\"absolute\"\n                  left={0}\n                  w=\"full\"\n                  display=\"none\"\n                  _groupHover={{ display: \"block\" }}\n                >\n                  {Features}\n                </Box>\n              </Box>\n              {/* <Button\n                bg={bg}\n                color=\"gray.500\"\n                display=\"inline-flex\"\n                alignItems=\"center\"\n                fontSize=\"md\"\n                _hover={{ color: cl }}\n                _focus={{ boxShadow: \"none\" }}\n              >\n                Blog\n              </Button>\n              <Button\n                bg={bg}\n                color=\"gray.500\"\n                display=\"inline-flex\"\n                alignItems=\"center\"\n                fontSize=\"md\"\n                _hover={{ color: cl }}\n                _focus={{ boxShadow: \"none\" }}\n              >\n                Pricing\n              </Button> */}\n            </HStack>\n          </Box>\n          <Spacer />\n          <Box display=\"flex\" alignItems=\"center\">\n            <HStack spacing={1}>\n              {/* <Button colorScheme=\"brand\" variant=\"ghost\" size=\"sm\">\n                Sign in\n              </Button> */}\n              <Button\n                colorScheme=\"brand\"\n                variant=\"solid\"\n                size=\"sm\"\n                onClick={() => history.push(\"/signin\")}\n              >\n                Sign in\n              </Button>\n            </HStack>\n            <IconButton\n              size=\"md\"\n              fontSize=\"lg\"\n              aria-label={`Switch to ${text} mode`}\n              variant=\"ghost\"\n              color=\"current\"\n              ml={{ base: \"0\", md: \"3\" }}\n              onClick={toggleMode}\n              icon={<SwitchIcon />}\n            />\n            {/* <IconButton\n              display={{ base: \"flex\", md: \"none\" }}\n              aria-label=\"Open menu\"\n              fontSize=\"20px\"\n              color={useColorModeValue(\"gray.800\", \"inherit\")}\n              variant=\"ghost\"\n              icon={<AiOutlineMenu />}\n              onClick={mobileNav.onOpen}\n            /> */}\n          </Box>\n        </Flex>\n\n        {/* {MobileNavContent} */}\n      </chakra.header>\n    </>\n  );\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/dashboard_screenshot.940797d7.png\";","import React from \"react\";\nimport {\n  chakra,\n  Box,\n  useColorModeValue,\n  Button,\n  Stack,\n  Image,\n  Text,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport dashboard_screenshot from \"../assets/dashboard_screenshot.png\"\n\nconst Hero = () => {\n  let history = useHistory();\n\n  return (\n    <Box px={8} py={24} mx=\"auto\">\n      <Box\n        w={{ base: \"full\", md: 11 / 12, xl: 9 / 12 }}\n        mx=\"auto\"\n        textAlign={{ base: \"left\", md: \"center\" }}\n      >\n        <chakra.h1\n          mb={6}\n          fontSize={{ base: \"4xl\", md: \"6xl\" }}\n          fontWeight=\"bold\"\n          lineHeight=\"none\"\n          letterSpacing={{ base: \"normal\", md: \"tight\" }}\n          color={useColorModeValue(\"gray.900\", \"gray.100\")}\n        >\n          The{\" \"}\n          <Text\n            display={{ base: \"block\", lg: \"inline\" }}\n            w=\"full\"\n            bgClip=\"text\"\n            bgGradient=\"linear(to-r, green.400,purple.500)\"\n            fontWeight=\"extrabold\"\n          >\n            smart home\n          </Text>{\" \"}\n          system of your dreams.\n        </chakra.h1>\n        <chakra.p\n          px={{ base: 0, lg: 24 }}\n          mb={6}\n          fontSize={{ base: \"lg\", md: \"xl\" }}\n          color={useColorModeValue(\"gray.600\", \"gray.300\")}\n        >\n          HomeNode is a smart home system, capable of monitoring, controlling,\n          and automating many different factors of your home.\n        </chakra.p>\n        <Stack\n          direction={{ base: \"column\", sm: \"row\" }}\n          mb={{ base: 4, md: 8 }}\n          spacing={2}\n          justifyContent={{ sm: \"left\", md: \"center\" }}\n        >\n          <Button\n            as=\"a\"\n            variant=\"solid\"\n            colorScheme=\"brand\"\n            display=\"inline-flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            w={{ base: \"full\", sm: \"auto\" }}\n            mb={{ base: 2, sm: 0 }}\n            size=\"lg\"\n            cursor=\"pointer\"\n            onClick={() => history.push(\"/signup\")}\n          >\n            Get Started\n            <Icon boxSize={4} ml={1} viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </Icon>\n          </Button>\n          <Button\n            as=\"a\"\n            colorScheme=\"gray\"\n            display=\"inline-flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            w={{ base: \"full\", sm: \"auto\" }}\n            mb={{ base: 2, sm: 0 }}\n            size=\"lg\"\n            cursor=\"pointer\"\n            onClick={() => {\n              window.open(\"https://youtu.be/ar90-TBzp-8\", \"_blank\");\n            }}\n          >\n            Watch Demo\n            <Icon boxSize={4} ml={1} viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path\n                fillRule=\"evenodd\"\n                d=\"M6.672 1.911a1 1 0 10-1.932.518l.259.966a1 1 0 001.932-.518l-.26-.966zM2.429 4.74a1 1 0 10-.517 1.932l.966.259a1 1 0 00.517-1.932l-.966-.26zm8.814-.569a1 1 0 00-1.415-1.414l-.707.707a1 1 0 101.415 1.415l.707-.708zm-7.071 7.072l.707-.707A1 1 0 003.465 9.12l-.708.707a1 1 0 001.415 1.415zm3.2-5.171a1 1 0 00-1.3 1.3l4 10a1 1 0 001.823.075l1.38-2.759 3.018 3.02a1 1 0 001.414-1.415l-3.019-3.02 2.76-1.379a1 1 0 00-.076-1.822l-10-4z\"\n                clipRule=\"evenodd\"\n              />\n            </Icon>\n          </Button>\n        </Stack>\n      </Box>\n      <Box\n        w={{ base: \"full\", md: 10 / 12 }}\n        mx=\"auto\"\n        mt={20}\n        textAlign=\"center\"\n      >\n        <Image\n          w=\"full\"\n          rounded=\"lg\"\n          shadow=\"2xl\"\n          src={dashboard_screenshot}\n          alt=\"Hellonext feedback boards software screenshot\"\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Hero;\n","import React from \"react\";\nimport {\n  chakra,\n  Box,\n  Image,\n  Flex,\n  Icon,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { MdEmail } from \"react-icons/md\";\nimport { FaUniversity } from \"react-icons/fa\";\n\nconst AboutCard = (props: any) => {\n  return (\n    <Box\n      w=\"sm\"\n      mx=\"4\"\n      my=\"4\"\n      bg={useColorModeValue(\"white\", \"gray.700\")}\n      shadow=\"lg\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      minWidth=\"15rem\"\n      maxWidth=\"18rem\"\n    >\n      <Image\n        w=\"full\"\n        h={56}\n        fit=\"cover\"\n        objectPosition=\"center\"\n        src={props.image}\n        alt=\"avatar\"\n      />\n\n      <Flex alignItems=\"center\" px={6} py={3} bg=\"gray.900\">\n        <Icon as={props.role_emoji} h={6} w={6} color={props.emoji_color} />\n\n        <chakra.h1 mx={3} color=\"white\" fontWeight=\"bold\" fontSize=\"lg\">\n          {props.role_description}\n        </chakra.h1>\n      </Flex>\n\n      <Box py={4} px={6}>\n        <chakra.h1\n          fontSize=\"xl\"\n          fontWeight=\"bold\"\n          color={useColorModeValue(\"gray.800\", \"white\")}\n        >\n          {props.name}\n        </chakra.h1>\n\n        <chakra.p py={2} color={useColorModeValue(\"gray.700\", \"gray.400\")}>\n          {props.description}\n        </chakra.p>\n\n        {/* <Flex\n          alignItems=\"center\"\n          mt={4}\n          color={useColorModeValue(\"gray.700\", \"gray.200\")}\n        >\n          <Icon as={BsFillBriefcaseFill} h={6} w={6} mr={2} />\n\n          <chakra.h1 px={2} fontSize=\"sm\">\n            University of Waterloo\n          </chakra.h1>\n        </Flex> */}\n\n        <Flex\n          alignItems=\"center\"\n          mt={4}\n          color={useColorModeValue(\"gray.700\", \"gray.200\")}\n        >\n          <Icon as={FaUniversity} h={6} w={6} mr={2} />\n\n          <chakra.h1 px={2} fontSize=\"sm\">\n            {props.university}\n          </chakra.h1>\n        </Flex>\n        <Flex\n          alignItems=\"center\"\n          mt={4}\n          color={useColorModeValue(\"gray.700\", \"gray.200\")}\n        >\n          <Icon as={MdEmail} h={6} w={6} mr={2} />\n\n          <chakra.h1 px={2} fontSize=\"sm\">\n            {props.email}\n          </chakra.h1>\n        </Flex>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AboutCard;\n","export default __webpack_public_path__ + \"static/media/zac.36b19e2f.jpg\";","export default __webpack_public_path__ + \"static/media/george.4c9f2b8b.jpg\";","export default __webpack_public_path__ + \"static/media/steven.771fec38.jpg\";","export default __webpack_public_path__ + \"static/media/hargun.f56b640a.jpg\";","export default __webpack_public_path__ + \"static/media/michael.b4bf090f.jpg\";","import React from \"react\";\nimport AboutCard from \"./AboutCard\";\nimport { Flex, useColorModeValue } from \"@chakra-ui/react\";\nimport { HiOutlineSparkles } from \"react-icons/hi\";\n\nimport zac from \"../assets/zac.jpg\";\nimport george from \"../assets/george.jpg\";\nimport steven from \"../assets/steven.jpg\";\nimport hargun from \"../assets/hargun.jpg\";\nimport michael from \"../assets/michael.jpg\";\n\nfunction About() {\n  return (\n    <div>\n      <Flex\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        px={50}\n        py={50}\n        w=\"full\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        flexWrap=\"wrap\"\n      >\n        <AboutCard\n          name=\"Zac Waite\"\n          role_emoji={HiOutlineSparkles}\n          image={zac}\n          emoji_color=\"yellow\"\n          role_description=\"Project Manager and Backend Developer\"\n          description=\"Student athlete and insomniac web/robot programmer\"\n          university=\"uWaterloo Software Engineering\"\n          email=\"zwaite@uwaterloo.ca\"\n        />\n        <AboutCard\n          name=\"George Shao\"\n          role_emoji={HiOutlineSparkles}\n          image={george}\n          emoji_color=\"yellow\"\n          role_description=\"Frontend Developer\"\n          description=\"Hackathon Fanatic & 2x VC Grantee\"\n          university=\"uWaterloo Software Engineering\"\n          email=\"g6shao@uwaterloo.ca\"\n        />\n        <AboutCard\n          name=\"Steven Gong\"\n          role_emoji={HiOutlineSparkles}\n          image={steven}\n          emoji_color=\"yellow\"\n          role_description=\"Développeur Python\"\n          description=\"Ex-gamer and aspiring youtuber\"\n          university=\"uWaterloo Software Engineering\"\n          email=\"s36gong@uwaterloo.ca\"\n        />\n        <AboutCard\n          name=\"Hargun Mujral\"\n          role_emoji={HiOutlineSparkles}\n          image={hargun}\n          emoji_color=\"yellow\"\n          role_description=\"Arduino and Data Processing\"\n          description=\"16 year old math nerd and EDM fanatic\"\n          university=\"uWaterloo Software Engineering\"\n          email=\"hmujral@uwaterloo.ca\"\n        />\n        <AboutCard\n          name=\"Michael Denissov\"\n          role_emoji={HiOutlineSparkles}\n          image={michael}\n          emoji_color=\"yellow\"\n          role_description=\"Robotics and AI Enthusiast\"\n          description=\"I developed hardware and firmware. (and ex-KGB agent)\"\n          university=\"uWaterloo Software Engineering\"\n          email=\"mdenissov@uwaterloo.ca\"\n        />\n      </Flex>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Hero from \"../components/Hero\";\nimport About from \"../components/About\";\n\nfunction Landing() {\n  return (\n    <div>\n      <Navbar />\n      <Hero />\n      <About />\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from 'react'\n\nfunction ViewThreat() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n\nexport default ViewThreat\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport { useColorModeValue, Table } from \"@chakra-ui/react\";\n\nfunction GeneralLineChart(props: any) {\n  return (\n    <Table\n      w=\"full\"\n      rounded=\"lg\"\n      shadow=\"lg\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      display={{\n        base: \"block\",\n        md: \"table\",\n      }}\n      sx={{\n        \"@media print\": {\n          display: \"table\",\n        },\n      }}\n    >\n      <tbody>\n        <tr>\n          <td>\n            <LineChart\n              width={600}\n              height={300}\n              data={props.data}\n              margin={{ top: 30, right: 20, bottom: 5, left: 0 }}\n            >\n              {props.lines.map((line: any) => (\n                <Line\n                  type=\"monotone\"\n                  key={line.key}\n                  dataKey={line.key}\n                  stroke={line.stroke}\n                  yAxisId={line.yAxisKey || \"left\"}\n                />\n              ))}\n              <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n              <XAxis dataKey={props.xAxisKey} />\n              <YAxis\n                yAxisId=\"left\"\n                orientation=\"left\"\n                tick={{ fill: props.yAxisColours[0] }}\n              />\n              <YAxis\n                yAxisId=\"right\"\n                orientation=\"right\"\n                tick={{ fill: props.yAxisColours[1] }}\n              />\n              <Tooltip />\n              <Legend />\n            </LineChart>\n          </td>\n        </tr>\n      </tbody>\n    </Table>\n  );\n}\n\nexport default GeneralLineChart;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport GeneralLineChart from \"./GeneralLineChart\";\nimport getcookie from \"../../getcookie\";\nimport Cookies from \"universal-cookie\";\n\ninterface ModuleData {\n  response: {\n    result: {\n      current_data: {\n        temperature: number;\n        humidity: number;\n        light_level: number;\n        // moisture: number;\n        updatedAt: string;\n      };\n      daily_data: [\n        {\n          temperature: number;\n          humidity: number;\n          light_level: number;\n          // moisture: number;\n          updatedAt: string;\n        }\n      ];\n    };\n  };\n}\n\nconst cookies = new Cookies();\n\nfunction SensorGraphs() {\n  const [CurrentData, setCurrentData] = useState([\n    {\n      \"live temperature\": 0,\n      \"live humidity\": 0,\n      \"live light level\": 0,\n      // \"live moisture\": 0,\n      updatedAt: \"\",\n    },\n  ]);\n\n  const [DailyData, setDailyData] = useState([\n    {\n      temperature: 0,\n      humidity: 0,\n      light_level: 0,\n      // moisture: 0,\n      updatedAt: \"\",\n    },\n  ]);\n\n  function getData() {\n    axios\n      .get<ModuleData>(\n        \"http://homenode.tech/api/sensors?id=\" + getcookie(\"sensors_id\", true)\n      )\n      .then((res) => {\n        const { data } = res;\n        let current_data = data.response.result.current_data;\n        let updated_data = {\n          \"live temperature\": current_data.temperature,\n          \"live humidity\": current_data.humidity,\n          \"live light level\": current_data.light_level,\n          // \"live moisture\": current_data.moisture,\n          updatedAt: current_data.updatedAt,\n        };\n        let daily_data = data.response.result.daily_data;\n        cookies.set(\"sensors_temperature\", current_data.temperature);\n        cookies.set(\"sensors_humidity\", current_data.humidity);\n        cookies.set(\"sensors_light_level\", current_data.light_level);\n        // cookies.set(\"sensors_moisture\", current_data.moisture);\n        console.log(\"GET SENSORMODULEDATA: \", current_data, daily_data);\n        setCurrentData([...CurrentData, updated_data]);\n        if (CurrentData.length > 10) {\n          setCurrentData([...CurrentData.slice(1), updated_data]);\n        }\n        let last_temperature = 0;\n        let last_humidity = 0;\n        let last_light_level = 0;\n        for (var i = 0; i < daily_data.length; i++) {\n          if (daily_data[i].temperature === undefined) {\n            daily_data[i].temperature = last_temperature;\n          } else {\n            last_temperature = daily_data[i].temperature;\n          }\n        }\n        for (var i = 0; i < daily_data.length; i++) {\n          if (daily_data[i].humidity === undefined) {\n            daily_data[i].humidity = last_humidity;\n          } else {\n            last_humidity = daily_data[i].humidity;\n          }\n        }\n        for (var i = 0; i < daily_data.length; i++) {\n          if (daily_data[i].light_level === undefined) {\n            daily_data[i].light_level = last_light_level;\n          } else {\n            last_light_level = daily_data[i].light_level;\n          }\n        }\n        setDailyData(daily_data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    var handle = setInterval(getData, 2500);\n    return () => {\n      clearInterval(handle);\n    };\n  });\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(600px, 1fr))\",\n        gridGap: \"20px\",\n      }}\n    >\n      <GeneralLineChart\n        data={CurrentData}\n        lines={[\n          {\n            key: \"live temperature\",\n            stroke: \"#ff86b8\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#ff86b8\"]}\n      />\n      <GeneralLineChart\n        data={CurrentData}\n        lines={[\n          {\n            key: \"live humidity\",\n            stroke: \"#b586ff\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#b586ff\"]}\n      />\n      <GeneralLineChart\n        data={CurrentData}\n        lines={[\n          {\n            key: \"live light level\",\n            stroke: \"#ff9d86\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#ff9d86\"]}\n      />\n      {/* <GeneralLineChart\n        data={CurrentData}\n        lines={[\n          {\n            key: \"live moisture\",\n            stroke: \"#ff9d86\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#ff9d86\"]}\n      /> */}\n      <GeneralLineChart\n        data={DailyData}\n        lines={[\n          {\n            key: \"temperature\",\n            stroke: \"#ff00ea\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#ff00ea\"]}\n      />\n      <GeneralLineChart\n        data={DailyData}\n        lines={[\n          {\n            key: \"humidity\",\n            stroke: \"#9086ff\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#9086ff\"]}\n      />\n      <GeneralLineChart\n        data={DailyData}\n        lines={[\n          {\n            key: \"light_level\",\n            stroke: \"#ff9600\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#ff9600\"]}\n      />\n      {/* <GeneralLineChart\n        data={DailyData}\n        lines={[\n          {\n            key: \"moisture\",\n            stroke: \"#ff9d86\",\n          },\n        ]}\n        // xAxisKey=\"updatedAt\"\n        yAxisColours={[\"#ff9d86\"]}\n      /> */}\n    </div>\n  );\n}\n\nexport default SensorGraphs;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  chakra,\n  Box,\n  Flex,\n  useColorModeValue,\n  Link,\n  CircularProgress,\n  Button,\n  Table,\n  Td,\n  Tr,\n  Tbody,\n  Icon,\n} from \"@chakra-ui/react\";\nimport getcookie from \"../../getcookie\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  MdSensors,\n  MdPersonSearch,\n  MdOutlineYard,\n  MdDeviceThermostat,\n  MdOutlineWbSunny,\n  MdOutlineWaterDrop,\n  MdWhatshot,\n  MdLightbulbOutline,\n  MdWater,\n  MdAlarm,\n  MdManageSearch,\n} from \"react-icons/md\";\n\ninterface PlantModuleData {\n  response: {\n    result: {\n      current_data: {\n        light_level: number;\n        light_on: boolean;\n        moisture: number;\n        num_waters: number;\n      };\n    };\n  };\n}\n\nconst LiveDetection = (props: any) => {\n  let history = useHistory();\n  const [DateTime, setDateTime] = useState(\"\");\n  const [PlantModuleData, setPlantModuleData] = useState({\n    light_level: 0,\n    light_on: false,\n    moisture: 0,\n    num_waters: 0,\n  });\n  const GetCurrentDateTime = () => {\n    const date_obj = new Date();\n    let day = date_obj.getDate();\n    let month = date_obj.getMonth() + 1;\n    let year = date_obj.getFullYear();\n    let hours = date_obj.getHours();\n    let minutes = date_obj.getMinutes();\n    let seconds = date_obj.getSeconds();\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    let months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let non_24_hour_time = hours > 12 ? hours - 12 : hours;\n    let actual_hr = \"\";\n    let actual_min = \"\";\n    let actual_sec = \"\";\n    if (hours > 12) {\n      actual_hr = non_24_hour_time.toString();\n      actual_min = minutes.toString();\n      actual_sec = seconds.toString();\n      if (hours < 10) {\n        actual_hr = \"0\" + non_24_hour_time;\n      }\n      if (minutes < 10) {\n        actual_min = \"0\" + minutes;\n      }\n      if (seconds < 10) {\n        actual_sec = \"0\" + seconds;\n      }\n      setDateTime(\n        `${days[date_obj.getDay()]}, ${\n          months[month - 1]\n        } ${day}, ${year} ${actual_hr}:${actual_min}:${actual_sec} PM`\n      );\n    } else {\n      actual_hr = non_24_hour_time.toString();\n      actual_min = minutes.toString();\n      actual_sec = seconds.toString();\n      if (hours < 10) {\n        actual_hr = \"0\" + non_24_hour_time;\n      }\n      if (minutes < 10) {\n        actual_min = \"0\" + minutes;\n      }\n      if (seconds < 10) {\n        actual_sec = \"0\" + seconds;\n      }\n      setDateTime(\n        `${days[date_obj.getDay()]}, ${\n          months[month - 1]\n        } ${day}, ${year} ${actual_hr}:${actual_min}:${actual_sec} AM`\n      );\n    }\n    return 0;\n  };\n\n  function GetPlantModuleData() {\n    axios\n      .get<PlantModuleData>(\n        \"http://homenode.tech/api/plants?id=\" + getcookie(\"plants_id\", true)\n      )\n      .then((res) => {\n        const { data } = res;\n        console.log(\"GET PLANTSMODULEDATA\", data);\n        let current_data = data.response.result.current_data;\n        let updated_data = {\n          light_level: current_data.light_level,\n          light_on: current_data.light_on,\n          moisture: current_data.moisture,\n          num_waters: current_data.num_waters,\n        };\n        setPlantModuleData(updated_data);\n      })\n      .catch((err) => {\n        console.log(\"GET PLANTSMODULEDATA ERROR\", err);\n      });\n    return 0;\n  }\n\n  useEffect(() => {\n    var handledate = setInterval(GetCurrentDateTime, 500);\n    return () => {\n      clearInterval(handledate);\n    };\n  });\n\n  useEffect(() => {\n    var handleplants = setInterval(GetPlantModuleData, 1000);\n    return () => {\n      clearInterval(handleplants);\n    };\n  });\n\n  return (\n    <Flex\n      bg={useColorModeValue(\"#F9FAFB\", \"gray.700\")}\n      pb={4}\n      w=\"full\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box\n        px={8}\n        py={4}\n        rounded=\"lg\"\n        shadow=\"lg\"\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        width=\"full\"\n        // height={250}\n        minHeight=\"250px\"\n        overflowY=\"hidden\"\n        overflowX=\"hidden\"\n      >\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <chakra.span\n            fontSize=\"sm\"\n            color={useColorModeValue(\"gray.600\", \"gray.400\")}\n          >\n            {DateTime}\n          </chakra.span>\n        </Flex>\n\n        <Box mt={2}>\n          <Link\n            fontSize=\"2xl\"\n            color={useColorModeValue(\"gray.700\", \"white\")}\n            fontWeight=\"700\"\n            _hover={{\n              color: useColorModeValue(\"gray.600\", \"gray.200\"),\n              textDecor: undefined,\n            }}\n          >\n            <Icon\n              mr=\"2\"\n              boxSize=\"8\"\n              _groupHover={{\n                color: useColorModeValue(\"gray.600\", \"gray.300\"),\n              }}\n              as={MdSensors}\n            ></Icon>\n            Sensors Module Live Data\n          </Link>\n          <Table variant=\"simple\">\n            <Tbody>\n              <Tr>\n                <Td>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdDeviceThermostat}\n                    ></Icon>\n                    Temperature:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {getcookie(\"sensors_temperature\", true)}\n                    </chakra.p>\n                  </chakra.p>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdWhatshot}\n                    ></Icon>\n                    Humidity:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {getcookie(\"sensors_humidity\", true)}\n                    </chakra.p>\n                  </chakra.p>\n                  <br />\n                </Td>\n                <Td>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdOutlineWbSunny}\n                    ></Icon>\n                    Light Level:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {getcookie(\"sensors_light_level\", true)}\n                    </chakra.p>\n                  </chakra.p>\n                  {/* <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    Moisture:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {getcookie(\"sensors_moisture\", true)}\n                    </chakra.p>\n                  </chakra.p> */}\n                  <br />\n                </Td>\n              </Tr>\n            </Tbody>\n          </Table>\n        </Box>\n\n        <Flex\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mt={-4}\n          ml={-2}\n        >\n          <Button\n            color={useColorModeValue(\"brand.600\", \"brand.400\")}\n            variant=\"ghost\"\n            onClick={() => history.push(\"/dashboard/wiki/module/sensors\")}\n          >\n            Learn more\n          </Button>\n\n          <Flex alignItems=\"center\">\n            <CircularProgress\n              isIndeterminate\n              w={10}\n              h={10}\n              mt={6}\n              color=\"brand.500\"\n              size=\"xxs\"\n            />\n          </Flex>\n        </Flex>\n      </Box>\n      <Box\n        mx={4}\n        px={8}\n        py={4}\n        rounded=\"lg\"\n        shadow=\"lg\"\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        width=\"full\"\n        // height={250}\n        minHeight=\"250px\"\n      >\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <chakra.span\n            fontSize=\"sm\"\n            color={useColorModeValue(\"gray.600\", \"gray.400\")}\n          >\n            {DateTime}\n          </chakra.span>\n        </Flex>\n\n        <Box mt={2}>\n          <Link\n            fontSize=\"2xl\"\n            color={useColorModeValue(\"gray.700\", \"white\")}\n            fontWeight=\"700\"\n            _hover={{\n              color: useColorModeValue(\"gray.600\", \"gray.200\"),\n              textDecor: undefined,\n            }}\n          >\n            <Icon\n              mr=\"2\"\n              boxSize=\"8\"\n              _groupHover={{\n                color: useColorModeValue(\"gray.600\", \"gray.300\"),\n              }}\n              as={MdPersonSearch}\n            ></Icon>\n            Intruders Module Live Data\n          </Link>\n          <Table variant=\"simple\">\n            <Tbody>\n              <Tr>\n                <Td>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdAlarm}\n                    ></Icon>\n                    Alert Level:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {props.alert_level !== \"None\"\n                        ? `${props.alert_level}`\n                        : `...`}\n                    </chakra.p>\n                  </chakra.p>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdManageSearch}\n                    ></Icon>\n                    Reason:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {props.alert_level !== \"None\"\n                        ? `${props.detection_level}`\n                        : `...`}\n                    </chakra.p>\n                  </chakra.p>\n                  <br />\n                </Td>\n              </Tr>\n            </Tbody>\n          </Table>\n        </Box>\n\n        <Flex\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mt={-4}\n          ml={-2}\n        >\n          <div>\n            <Button\n              color={useColorModeValue(\"brand.600\", \"brand.400\")}\n              variant=\"ghost\"\n              onClick={() => history.push(\"/dashboard/wiki/module/intruders\")}\n            >\n              Learn more\n            </Button>\n\n            <Button\n              color={useColorModeValue(\"red.600\", \"red.400\")}\n              variant=\"ghost\"\n              onClick={() => history.push(\"/dashboard/viewthreats\")}\n            >\n              View threats\n            </Button>\n          </div>\n\n          <Flex alignItems=\"center\">\n            <CircularProgress\n              isIndeterminate\n              w={10}\n              h={10}\n              mt={6}\n              color=\"brand.500\"\n              size=\"xxs\"\n            />\n          </Flex>\n        </Flex>\n      </Box>\n      <Box\n        px={8}\n        py={4}\n        rounded=\"lg\"\n        shadow=\"lg\"\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        width=\"full\"\n        // height={250}\n        minHeight=\"250px\"\n      >\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <chakra.span\n            fontSize=\"sm\"\n            color={useColorModeValue(\"gray.600\", \"gray.400\")}\n          >\n            {DateTime}\n          </chakra.span>\n        </Flex>\n\n        <Box mt={2}>\n          <Link\n            fontSize=\"2xl\"\n            color={useColorModeValue(\"gray.700\", \"white\")}\n            fontWeight=\"700\"\n            _hover={{\n              color: useColorModeValue(\"gray.600\", \"gray.200\"),\n              textDecor: undefined,\n            }}\n          >\n            <Icon\n              mr=\"2\"\n              boxSize=\"8\"\n              _groupHover={{\n                color: useColorModeValue(\"gray.600\", \"gray.300\"),\n              }}\n              as={MdOutlineYard}\n            ></Icon>\n            Plant Module Live Data\n          </Link>\n          <Table variant=\"simple\">\n            <Tbody>\n              <Tr>\n                <Td>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdLightbulbOutline}\n                    ></Icon>\n                    Light Status:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {(PlantModuleData.light_on ? \"ON\" : \"OFF\") ||\n                        getcookie(\"plant_light_status\", true)}\n                    </chakra.p>\n                  </chakra.p>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdOutlineWaterDrop}\n                    ></Icon>\n                    Times Watered:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {PlantModuleData.num_waters ||\n                        getcookie(\"plant_num_waters\", true)}\n                    </chakra.p>\n                  </chakra.p>\n                  <br />\n                </Td>\n                <Td>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdOutlineWbSunny}\n                    ></Icon>\n                    Light Level:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {PlantModuleData.light_level ||\n                        getcookie(\"plant_light_level\", true)}\n                    </chakra.p>\n                  </chakra.p>\n                  <chakra.p\n                    mt={2}\n                    color={useColorModeValue(\"gray.600\", \"gray.300\")}\n                  >\n                    <Icon\n                      mr=\"1\"\n                      boxSize=\"6\"\n                      _groupHover={{\n                        color: useColorModeValue(\"gray.600\", \"gray.300\"),\n                      }}\n                      as={MdWater}\n                    ></Icon>\n                    Moisture:{\" \"}\n                    <chakra.p\n                      display={{ base: \"block\", lg: \"inline\" }}\n                      fontWeight=\"bold\"\n                      color={useColorModeValue(\"brand.500\", \"brand.500\")}\n                    >\n                      {PlantModuleData.moisture ||\n                        getcookie(\"plant_moisture\", true)}\n                    </chakra.p>\n                  </chakra.p>\n                  <br />\n                </Td>\n              </Tr>\n            </Tbody>\n          </Table>\n        </Box>\n\n        <Flex\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          mt={-4}\n          ml={-2}\n        >\n          <Button\n            color={useColorModeValue(\"brand.600\", \"brand.400\")}\n            variant=\"ghost\"\n            onClick={() => history.push(\"/dashboard/wiki/module/plant\")}\n          >\n            Learn more\n          </Button>\n\n          <Flex alignItems=\"center\">\n            <CircularProgress\n              isIndeterminate\n              w={10}\n              h={10}\n              mt={6}\n              color=\"brand.500\"\n              size=\"xxs\"\n            />\n          </Flex>\n        </Flex>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default LiveDetection;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  useColorModeValue,\n  Table,\n  Thead,\n  Tr,\n  Th,\n  Td,\n  Tbody,\n  Box,\n} from \"@chakra-ui/react\";\nimport LiveDetection from \"./LiveDetection\";\nimport getcookie from \"../../getcookie\";\n\ninterface ModuleData {\n  response: {\n    result: {\n      current_data: {\n        detection: string;\n        alert_level: number;\n        updatedAt: string;\n      };\n      daily_data: [\n        {\n          detection: string;\n          alert_level: number;\n          updatedAt: string;\n        }\n      ];\n    };\n  };\n}\n\nexport default function IntrusionDetectionArea() {\n  const [CurrentData, setCurrentData] = useState({\n    detection: \"\",\n    alert_level: 0,\n    updatedAt: \"\",\n  });\n  const [DailyData, setDailyData] = useState([\n    {\n      detection: \"\",\n      alert_level: 0,\n      updatedAt: \"\",\n    },\n  ]);\n\n  function getData() {\n    axios\n      .get<ModuleData>(\n        \"http://homenode.tech/api/intruders?id=\" +\n          getcookie(\"intruders_id\", true)\n      )\n      .then((res) => {\n        const { data } = res;\n        let current_data = data.response.result.current_data;\n        let daily_data = data.response.result.daily_data;\n        console.log(\"GET INTRUDERSMODULEDATA: \", current_data, daily_data);\n        setCurrentData(current_data);\n        setDailyData(daily_data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function convertDate(date: string) {\n    let date_obj = new Date(date);\n    let day = date_obj.getDate();\n    let month = date_obj.getMonth() + 1;\n    let year = date_obj.getFullYear();\n    let hours = date_obj.getHours();\n    let minutes = date_obj.getMinutes();\n    let seconds = date_obj.getSeconds();\n    let days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    let months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let non_24_hour_time = hours > 12 ? hours - 12 : hours;\n    let actual_hr = \"\";\n    let actual_min = \"\";\n    let actual_sec = \"\";\n    if (hours > 12) {\n      let actual_hr = non_24_hour_time.toString();\n      let actual_min = minutes.toString();\n      let actual_sec = seconds.toString();\n      if (hours < 10) {\n        actual_hr = \"0\" + non_24_hour_time;\n      }\n      if (minutes < 10) {\n        actual_min = \"0\" + minutes;\n      }\n      if (seconds < 10) {\n        actual_sec = \"0\" + seconds;\n      }\n      return `${days[date_obj.getDay()]}, ${\n        months[month - 1]\n      } ${day}, ${year} ${actual_hr}:${actual_min}:${actual_sec} PM`;\n    } else {\n      return `${days[date_obj.getDay()]}, ${\n        months[month - 1]\n      } ${day}, ${year} ${actual_hr}:${actual_min}:${actual_sec} AM`;\n    }\n  }\n\n  useEffect(() => {\n    var handle = setInterval(getData, 2500);\n    return () => {\n      clearInterval(handle);\n    };\n  });\n\n  return (\n    <>\n      <LiveDetection\n        date={convertDate(CurrentData.updatedAt)}\n        detection_level={CurrentData.detection}\n        alert_level={CurrentData.alert_level}\n      />\n      <Box\n        style={{ overflowY: \"scroll\", maxHeight: \"32vh\" }}\n        rounded=\"lg\"\n        shadow=\"lg\"\n      >\n        <Table\n          w=\"full\"\n          bg={useColorModeValue(\"white\", \"gray.800\")}\n          display={{\n            base: \"block\",\n            md: \"table\",\n          }}\n          sx={{\n            \"@media print\": {\n              display: \"table\",\n            },\n          }}\n        >\n          <Thead\n            display={{\n              base: \"none\",\n              md: \"table-header-group\",\n            }}\n            sx={{\n              \"@media print\": {\n                display: \"table-header-group\",\n              },\n            }}\n            bg={useColorModeValue(\"white\", \"gray.800\")}\n            style={{ position: \"sticky\", top: 0 }}\n          >\n            <Tr>\n              <Th key={\"Date & Time\"}>Date & Time</Th>\n              <Th key={\"Detection\"}>Detection</Th>\n              <Th key={\"Alert Level\"}>Alert Level</Th>\n            </Tr>\n          </Thead>\n          <Tbody\n            display={{\n              base: \"block\",\n              lg: \"table-row-group\",\n            }}\n            sx={{\n              \"@media print\": {\n                display: \"table-row-group\",\n              },\n            }}\n          >\n            {DailyData.map((item) => item)\n              .reverse()\n              .map((data, index) => {\n                return (\n                  <Tr key={index}>\n                    <Td key={\"Date & Time\"}>{convertDate(data.updatedAt)}</Td>\n                    <Td key={\"Detection\"}>{data.detection}</Td>\n                    <Td key={\"Alert Level\"}>{data.alert_level}</Td>\n                  </Tr>\n                );\n              })}\n          </Tbody>\n        </Table>\n      </Box>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\nimport SensorGraphs from \"./SensorGraphs\";\nimport IntrusionDetectionArea from \"./IntrusionDetectionArea\";\n\nfunction ChartsGroup() {\n  return (\n    <div>\n      <IntrusionDetectionArea />\n      <Box h={4} />\n      <SensorGraphs />\n    </div>\n  );\n}\n\nexport default ChartsGroup;\n","import React, { useEffect } from \"react\";\nimport { useToast } from \"@chakra-ui/react\";\nimport ChartsGroup from \"../../components/dashboard/ChartsGroup\";\n\nfunction Home() {\n  const toast = useToast();\n  useEffect(() => {\n    setTimeout(function () {\n      toast({\n        title: \"Dashboard Loaded Successfully!\",\n        description: \"Loading graphs...\",\n        status: \"success\",\n        duration: 1500,\n        isClosable: true,\n      });\n      setTimeout(function () {\n        toast({\n          title: \"Graphs Loaded Successfully!\",\n          description: \"Welcome to HomeNode!\",\n          status: \"success\",\n          duration: 5000,\n          isClosable: true,\n        });\n      }, 1500);\n    }, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div>\n      <ChartsGroup />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  useColorModeValue,\n  ButtonGroup,\n  IconButton,\n  Table,\n  Thead,\n  Tr,\n  Th,\n  Td,\n  Tbody,\n  Switch,\n  useColorMode,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from \"@chakra-ui/react\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport getcookie from \"../../getcookie\";\nimport Cookies from \"universal-cookie\";\n\ninterface UserInfo {\n  response: {\n    result: {\n      username: string;\n      name: string;\n      home_id: string;\n      settings: {\n        dark_mode: boolean;\n        email_notifications: boolean;\n        intrusion_detection: boolean;\n      };\n    };\n  };\n}\n\nexport default function SettingsTable() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const [EmailNotifications, setEmailNotifications] = useState(false);\n  const [IntrusionDetection, setIntrusionDetection] = useState(false);\n  const [SafetyLevel, setSafetyLevel] =\n    useState(5);\n  const header = [\"key\", \"actions\"];\n  const data = [\n    { key: \"Dark Mode\" },\n    { key: \"Email Notifications\" },\n    { key: \"Intrusion Detection\" },\n    { key: \"Safety Level\" },\n  ];\n  const cookies = new Cookies();\n\n  function getOppositeColorMode() {\n    return colorMode === \"dark\" ? \"false\" : \"true\";\n  }\n\n  function forceColorModeUpdate() {\n    axios\n      .get<UserInfo>(\n        \"http://homenode.tech/api/user?username=\" + getcookie(\"email\", true)\n      )\n      .then((res) => {\n        const { data } = res;\n        let received_color_mode = data.response.result.settings.dark_mode;\n        console.log(\"GET COLORMODE: \", received_color_mode);\n        if (colorMode === \"dark\" && received_color_mode === false) {\n          toggleColorMode();\n        } else if (colorMode === \"light\" && received_color_mode === true) {\n          toggleColorMode();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function forceEmailNotificationsUpdate() {\n    axios\n      .get<UserInfo>(\n        \"http://homenode.tech/api/user?username=\" + getcookie(\"email\", true)\n      )\n      .then((res) => {\n        const { data } = res;\n        let received_email_notifications =\n          data.response.result.settings.email_notifications;\n        console.log(\"GET EMAILNOTIFS: \", received_email_notifications);\n        setEmailNotifications(received_email_notifications);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function forceIntrusionDetectionUpdate() {\n    axios\n      .get(\"http://homenode.tech/api/home?id=\" + getcookie(\"home_id\", true))\n      .then((res) => {\n        const { data } = res;\n        let received_intrusion_detection =\n          data.response.result.settings.intrusion_detection;\n        let received_safety_level =\n          data.response.result.settings.safety_level;\n\n        console.log(\n          \"GET INTRUSIONDETECTION: \",\n          received_intrusion_detection,\n          received_safety_level,\n        );\n        setIntrusionDetection(received_intrusion_detection);\n        setSafetyLevel(received_safety_level);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    forceColorModeUpdate();\n    forceEmailNotificationsUpdate();\n    forceIntrusionDetectionUpdate();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Table\n      w=\"full\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      display={{\n        base: \"block\",\n        md: \"table\",\n      }}\n      sx={{\n        \"@media print\": {\n          display: \"table\",\n        },\n      }}\n    >\n      <Thead\n        display={{\n          base: \"none\",\n          md: \"table-header-group\",\n        }}\n        sx={{\n          \"@media print\": {\n            display: \"table-header-group\",\n          },\n        }}\n      >\n        <Tr>\n          {header.map((x) => (\n            <Th key={x}>{x}</Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody\n        display={{\n          base: \"block\",\n          lg: \"table-row-group\",\n        }}\n        sx={{\n          \"@media print\": {\n            display: \"table-row-group\",\n          },\n        }}\n      >\n        {data.map((token, tid) => {\n          return (\n            <Tr\n              key={tid}\n              display={{\n                base: \"grid\",\n                md: \"table-row\",\n              }}\n              sx={{\n                \"@media print\": {\n                  display: \"table-row\",\n                },\n                gridTemplateColumns: \"minmax(0px, 35%) minmax(0px, 65%)\",\n                gridGap: \"10px\",\n              }}\n            >\n              {Object.keys(token).map((x) => {\n                return (\n                  <React.Fragment key={`${tid}${x}`}>\n                    <Td\n                      display={{\n                        base: \"table-cell\",\n                        md: \"none\",\n                      }}\n                      sx={{\n                        \"@media print\": {\n                          display: \"none\",\n                        },\n                        textTransform: \"uppercase\",\n                        color: \"gray.400\",\n                        fontSize: \"xs\",\n                        fontWeight: \"bold\",\n                        letterSpacing: \"wider\",\n                        fontFamily: \"heading\",\n                      }}\n                    ></Td>\n                    <Td color=\"gray.500\" fontSize=\"md\">\n                      {x === \"key\" && data[tid][\"key\"]}\n                    </Td>\n                  </React.Fragment>\n                );\n              })}\n              <Td\n                display={{\n                  base: \"table-cell\",\n                  md: \"none\",\n                }}\n                sx={{\n                  \"@media print\": {\n                    display: \"none\",\n                  },\n                  textTransform: \"uppercase\",\n                  color: \"gray.400\",\n                  fontSize: \"xs\",\n                  fontWeight: \"bold\",\n                  letterSpacing: \"wider\",\n                  fontFamily: \"heading\",\n                }}\n              >\n                Actions\n              </Td>\n              <Td>\n                {data[tid][\"key\"] === \"Dark Mode\" && (\n                  <ButtonGroup variant=\"solid\" size=\"sm\" spacing={3}>\n                    <Switch\n                      size=\"lg\"\n                      isChecked={colorMode === \"dark\"}\n                      onChange={() => {\n                        axios\n                          .put(\n                            \"http://homenode.tech/api/user?put_type=settings.dark_mode\",\n                            {\n                              username: getcookie(\"email\", true),\n                              settings: {\n                                dark_mode: getOppositeColorMode(),\n                              },\n                            }\n                          )\n                          .then(() => forceColorModeUpdate());\n                        console.log(\"PUT COLORMODE: \", getOppositeColorMode());\n                      }}\n                    />\n                  </ButtonGroup>\n                )}\n                {data[tid][\"key\"] === \"Email Notifications\" && (\n                  <ButtonGroup variant=\"solid\" size=\"sm\" spacing={3}>\n                    <Switch\n                      size=\"lg\"\n                      isChecked={EmailNotifications === true}\n                      onChange={() => {\n                        axios\n                          .put(\n                            \"http://homenode.tech/api/user?put_type=settings.email_notifications\",\n                            {\n                              username: getcookie(\"email\", true),\n                              settings: {\n                                email_notifications: !EmailNotifications,\n                              },\n                            }\n                          )\n                          .then(() => forceEmailNotificationsUpdate());\n                        console.log(\"PUT EMAILNOTIFS: \", !EmailNotifications);\n                      }}\n                    />\n                  </ButtonGroup>\n                )}\n                {data[tid][\"key\"] === \"Intrusion Detection\" && (\n                  <ButtonGroup variant=\"solid\" size=\"sm\" spacing={3}>\n                    <Switch\n                      size=\"lg\"\n                      isChecked={IntrusionDetection === true}\n                      onChange={() => {\n                        axios\n                          .put(\n                            \"http://homenode.tech/api/home?put_type=settings.intrusion_detection\",\n                            {\n                              id: getcookie(\"home_id\", true),\n                              settings: {\n                                intrusion_detection: !IntrusionDetection,\n                              },\n                            }\n                          )\n                          .then(() => forceIntrusionDetectionUpdate());\n                        console.log(\n                          \"PUT INTRUSIONDETECTION: \",\n                          !IntrusionDetection\n                        );\n                      }}\n                    />\n                  </ButtonGroup>\n                )}\n                {data[tid][\"key\"] === \"Safety Level\" && (\n                  <NumberInput\n                    size=\"sm\"\n                    width=\"75px\"\n                    defaultValue={getcookie(\"safety_level\", true) || SafetyLevel}\n                    min={1}\n                    max={10}\n                    onChange={(val) =>\n                      // console.log(\"SAFETY LEVEL: \", val)\n                      axios.put(\n                        \"http://homenode.tech/api/home?put_type=settings.safety_level\",\n                        {\n                          id: getcookie(\"home_id\", true),\n                          settings: {\n                            safety_level: val,\n                          },\n                        }\n                      ).then(() => cookies.set(\"safety_level\", val))\n                    }\n                  >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                      <NumberIncrementStepper />\n                      <NumberDecrementStepper />\n                    </NumberInputStepper>\n                  </NumberInput>\n                )}\n\n                {data[tid][\"key\"] !== \"Dark Mode\" &&\n                  data[tid][\"key\"] !== \"Email Notifications\" &&\n                  data[tid][\"key\"] !== \"Intrusion Detection\" &&\n                  data[tid][\"key\"] !== \"Safety Level\" && (\n                    <ButtonGroup variant=\"solid\" size=\"sm\" spacing={3}>\n                      <IconButton\n                        colorScheme=\"green\"\n                        icon={<AiFillEdit />}\n                        aria-label=\"button\"\n                      />\n                    </ButtonGroup>\n                  )}\n              </Td>\n              {/* <Td>\n                <ButtonGroup variant=\"solid\" size=\"sm\" spacing={3}>\n                  <IconButton\n                    colorScheme=\"blue\"\n                    icon={<BsBoxArrowUpRight />}\n                    aria-label=\"button\"\n                  />\n                  <IconButton\n                    colorScheme=\"green\"\n                    icon={<AiFillEdit />}\n                    aria-label=\"button\"\n                  />\n                  <IconButton\n                    colorScheme=\"red\"\n                    variant=\"outline\"\n                    icon={<BsFillTrashFill />}\n                    aria-label=\"button\"\n                  />\n                </ButtonGroup>\n              </Td> */}\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </Table>\n  );\n}\n","import React from \"react\";\nimport SettingsTable from \"../../components/dashboard/SettingsTable\";\n\nfunction Settings() {\n  return (\n    <div>\n      <SettingsTable />\n    </div>\n  );\n}\n\nexport default Settings;\n","export default __webpack_public_path__ + \"static/media/imageintruders1.d78348d6.jpg\";","export default __webpack_public_path__ + \"static/media/doorsensor.3935bc55.jpg\";","export default __webpack_public_path__ + \"static/media/windowsensor.338d1a4e.jpg\";","import React from \"react\";\nimport { Flex, Heading, Text, SimpleGrid, Image } from \"@chakra-ui/react\";\nimport imageintruders1 from \"../../assets/imageintruders1.jpg\";\nimport doorsensor from \"../../assets/doorsensor.jpg\";\nimport windowsensor from \"../../assets/windowsensor.jpg\";\n\nfunction WikiIntruders() {\n  return (\n    <Flex alignItems=\"start\" flexDirection=\"column\" gap=\"500px\">\n      <Heading size=\"2xl\">Intruders Module</Heading>\n      <br />\n      <Heading size=\"xl\">Summary</Heading>\n      <Text>\n        The intruders module is used to detect intruders and alert the user in\n        the event that suspicious activity is detected in their home.\n      </Text>\n      <br />\n      <Heading size=\"xl\">Components</Heading>\n      <Text>The intruders module contains the following sensors:</Text>\n      <br />\n      <Heading size=\"l\">Motion Sensor</Heading>\n      <Text>The sensor detects motion in a specific area of one's house.</Text>\n      <Text>It returns a boolean (true/false) value.</Text>\n      <br />\n      <Heading size=\"l\">Window Sensor</Heading>\n      <Text>\n        This sensor detects whether a window has been opened or closed.\n      </Text>\n      <Text>It returns a boolean (true/false) value.</Text>\n      <br />\n      <Heading size=\"l\">Door Sensor</Heading>\n      <Text>This sensor detects whether a door has been opened or closed.</Text>\n      <Text>It returns a boolean (true/false) value.</Text>\n      <br />\n      <Heading size=\"xl\">Image Gallery</Heading>\n      <br />\n      <SimpleGrid columns={3} spacing={10}>\n        <Image src={imageintruders1} alt=\"Intruder\" height=\"500px\" />\n        <Image src={doorsensor} alt=\"Intruder\" height=\"500px\" />\n        <Image src={windowsensor} alt=\"Intruder\" height=\"500px\" />\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default WikiIntruders;\n","export default __webpack_public_path__ + \"static/media/imageplant1.f98ddfbb.jpg\";","export default __webpack_public_path__ + \"static/media/imageplant2.e82e9317.jpg\";","export default __webpack_public_path__ + \"static/media/imageplant3.c720371f.jpg\";","export default __webpack_public_path__ + \"static/media/imageplant4.c198b211.jpg\";","export default __webpack_public_path__ + \"static/media/imageplant5.bf1594eb.jpg\";","export default __webpack_public_path__ + \"static/media/imageplant6.ba74af4e.jpg\";","import React from \"react\";\nimport { Flex, Heading, Text, SimpleGrid, Image } from \"@chakra-ui/react\";\nimport imageplant1 from \"../../assets/imageplant1.jpg\";\nimport imageplant2 from \"../../assets/imageplant2.jpg\";\nimport imageplant3 from \"../../assets/imageplant3.jpg\";\nimport imageplant4 from \"../../assets/imageplant4.jpg\";\nimport imageplant5 from \"../../assets/imageplant5.jpg\";\nimport imageplant6 from \"../../assets/imageplant6.jpg\";\n\nfunction WikiPlant() {\n  return (\n    <Flex alignItems=\"start\" flexDirection=\"column\" gap=\"500px\">\n      <Heading size=\"2xl\">Plant Module</Heading>\n      <br />\n      <Heading size=\"xl\">Summary</Heading>\n      <Text>\n        The plant module is responsible for monitoring the plant and maintaining\n        it's wellbeing.\n      </Text>\n      <br />\n      <Heading size=\"xl\">Components</Heading>\n      <Text>The plant module contains the following components:</Text>\n      <br />\n      <Heading size=\"l\">Moisture Sensor</Heading>\n      <Text>\n        This sensor is used to get the moisture of the system. A typical value\n        for moisture is 35-60%.\n      </Text>\n      <Text>It returns the moisture in %.</Text>\n      <br />\n      <Heading size=\"l\">Light Level Sensor</Heading>\n      <Text>\n        This sensor is used to get the light level of the system. 0% is no light\n        while 100% is extremely bright.\n      </Text>\n      <Text>It returns the light level in %.</Text>\n      <br />\n      <Heading size=\"l\">Watering Mechanism</Heading>\n      <Text>This mechanism waters the plant.</Text>\n      <br />\n      <Heading size=\"l\">Light Switch</Heading>\n      <Text>\n        A simple light switch that turns on and off the light near the plant.\n      </Text>\n      <br />\n      <Heading size=\"xl\">Video & Image Gallery</Heading>\n      <br />\n      <iframe\n        width=\"560\"\n        height=\"315\"\n        src=\"https://www.youtube-nocookie.com/embed/-wechVphMZE\"\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n      <br />\n      <SimpleGrid columns={3} spacing={10}>\n        <Image src={imageplant3} alt=\"Plant\" height=\"500px\" />\n        <Image src={imageplant1} alt=\"Plant\" height=\"500px\" />\n        <Image src={imageplant2} alt=\"Plant\" height=\"500px\" />\n        <Image src={imageplant4} alt=\"Plant\" height=\"500px\" />\n        <Image src={imageplant5} alt=\"Plant\" height=\"500px\" />\n        <Image src={imageplant6} alt=\"Plant\" height=\"500px\" />\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default WikiPlant;\n","export default __webpack_public_path__ + \"static/media/imagesensors1.c4d9daf4.jpg\";","import React from \"react\";\nimport { Flex, Heading, Text, SimpleGrid, Image } from \"@chakra-ui/react\";\nimport imagesensors1 from \"../../assets/imagesensors1.jpg\";\n\nfunction WikiSensors() {\n  return (\n    <Flex alignItems=\"start\" flexDirection=\"column\" gap=\"500px\">\n      <Heading size=\"2xl\">Sensors Module</Heading>\n      <br />\n      <Heading size=\"xl\">Summary</Heading>\n      <Text>\n        Sensors are the main way to get information about the state of the\n        system. They are used to get information about the state of the system.\n      </Text>\n      <br />\n      <Heading size=\"xl\">Components</Heading>\n      <Text>The sensors module contains the following sensors:</Text>\n      <br />\n      <Heading size=\"l\">Temperature Sensor</Heading>\n      <Text>This sensor is used to get the temperature of the system.</Text>\n      <Text>\n        It returns the temperature in Celsius. Room temperature is 20 degrees\n        Celsius.\n      </Text>\n      <br />\n      <Heading size=\"l\">Humidity Sensor</Heading>\n      <Text>This sensor is used to get the humidity of the system.</Text>\n      <Text>\n        It returns the humidity in %. A typical value for humidity is 35-60%.\n      </Text>\n      <br />\n      <Heading size=\"l\">Light Level Sensor</Heading>\n      <Text>\n        This sensor is used to get the light level of the system. 0% is no light\n        while 100% is extremely bright.\n      </Text>\n      <Text>It returns the light level in %.</Text>\n      <br />\n      <Heading size=\"xl\">Image Gallery</Heading>\n      <br />\n      <SimpleGrid columns={3} spacing={10}>\n        <Image src={imagesensors1} alt=\"Sensor\" height=\"500px\" />\n      </SimpleGrid>\n    </Flex>\n  );\n}\n\nexport default WikiSensors;\n","import {\n  Box,\n  Collapse,\n  Drawer,\n  DrawerContent,\n  DrawerOverlay,\n  Flex,\n  Icon,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  Popover,\n  PopoverTrigger,\n  Button,\n  PopoverContent,\n  PopoverHeader,\n  PopoverCloseButton,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  ButtonGroup,\n  Table,\n  Tbody,\n  Tr,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\nimport { BsGearFill } from \"react-icons/bs\";\nimport { FiMenu, FiSearch } from \"react-icons/fi\";\nimport { HiCode } from \"react-icons/hi\";\nimport {\n  MdHome,\n  MdKeyboardArrowRight,\n  MdNotifications,\n  MdPerson,\n} from \"react-icons/md\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport logo from \"../../assets/logo.svg\";\nimport UserContext from \"../../User\";\nimport getcookie from \"../../getcookie\";\nimport Cookies from \"universal-cookie\";\nimport axios from \"axios\";\n\nimport Home from \"../../pages/dashboard/Home\";\nimport Settings from \"../../pages/dashboard/Settings\";\nimport WikiIntruders from \"../../pages/dashboard/WikiIntruders\";\nimport WikiPlant from \"../../pages/dashboard/WikiPlant\";\nimport WikiSensors from \"../../pages/dashboard/WikiSensors\";\n\ninterface Notification {\n  id: string;\n  title: string;\n  info: string;\n  read: boolean;\n}\n\nfunction Sidebar() {\n  const cookies = new Cookies();\n  const sidebar = useDisclosure();\n  const integrations = useDisclosure();\n  let match = useRouteMatch();\n  const history = useHistory();\n  const user = useContext(UserContext);\n  const toast = useToast();\n  const [Notifications, setNotifications] = useState<Notification[]>([]);\n\n  function switchPages(page: string) {\n    if (page === \"wiki\") {\n      integrations.onToggle();\n    } else {\n      history.push(`${match.url}/${page}`);\n      user.currentPage = page;\n      console.log(\"GOTO\", user.currentPage);\n    }\n  }\n\n  function goToSettingsOnPopover() {\n    history.push(`/dashboard/settings`);\n    user.currentPage = \"settings\";\n    console.log(\"GOTO\", user.currentPage);\n  }\n\n  function signoutOnPopover() {\n    cookies.remove(\"token\", { path: \"/\" });\n    cookies.remove(\"email\", { path: \"/\" });\n    cookies.remove(\"home_id\", { path: \"/\" });\n    cookies.remove(\"sensors_id\", { path: \"/\" });\n    cookies.remove(\"intruders_id\", { path: \"/\" });\n    cookies.remove(\"name\", { path: \"/\" });\n    history.push(\"/\");\n    console.log(\"LOGOUT\");\n  }\n\n  function getNotifications() {\n    axios\n      .get(\"http://homenode.tech/api/home?id=\" + getcookie(\"home_id\", true))\n      .then((res) => {\n        const { data } = res;\n        let received_notifs = data.response.result.notifications;\n        setNotifications(received_notifs);\n        received_notifs.map((notif: Notification) => {\n          if (notif.read === false) {\n            toast({\n              title: notif.title,\n              description: notif.info,\n              status: \"success\",\n              duration: 5000,\n              isClosable: true,\n            });\n          }\n        });\n        console.log(\"GET NOTIFS: \", received_notifs);\n      })\n      .then((res) => {\n        axios\n          .put(\"http://homenode.tech/api/home?put_type=read_notification\", {\n            id: getcookie(\"home_id\", true),\n          })\n          .then((res) => {\n            console.log(\"PUT NOTIFSREAD:\", res);\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    var handlenotifs = setInterval(getNotifications, 5000);\n    return () => {\n      clearInterval(handlenotifs);\n    };\n  });\n\n  const NavItem = (props: any) => {\n    const { icon, children, ...rest } = props;\n    return (\n      <Flex\n        align=\"center\"\n        px=\"4\"\n        pl=\"4\"\n        py=\"3\"\n        cursor=\"pointer\"\n        color={useColorModeValue(\"inherit\", \"gray.400\")}\n        _hover={{\n          bg: useColorModeValue(\"gray.100\", \"gray.900\"),\n          color: useColorModeValue(\"gray.900\", \"gray.200\"),\n        }}\n        role=\"group\"\n        fontWeight=\"semibold\"\n        transition=\".15s ease\"\n        {...rest}\n        onClick={() => switchPages(props.type)}\n      >\n        {\n          <Icon\n            mr=\"2\"\n            boxSize=\"4\"\n            _groupHover={{\n              color: useColorModeValue(\"gray.600\", \"gray.300\"),\n            }}\n            as={icon ? icon : MdKeyboardArrowRight}\n          />\n        }\n        {children}\n      </Flex>\n    );\n  };\n\n  const SidebarContent = (props: any) => (\n    <Box\n      as=\"nav\"\n      pos=\"fixed\"\n      top=\"0\"\n      left=\"0\"\n      zIndex=\"sticky\"\n      h=\"full\"\n      pb=\"10\"\n      overflowX=\"hidden\"\n      overflowY=\"auto\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      borderColor={useColorModeValue(\"inherit\", \"gray.700\")}\n      borderRightWidth=\"1px\"\n      w=\"60\"\n      {...props}\n    >\n      <Flex px=\"4\" py=\"5\" align=\"center\">\n        <img src={logo} alt=\"logo\" width=\"48\" height=\"48\" />\n        <Text\n          fontSize=\"2xl\"\n          ml=\"2\"\n          color={useColorModeValue(\"brand.500\", \"white\")}\n          fontWeight=\"semibold\"\n        >\n          HomeNode\n        </Text>\n      </Flex>\n      <Flex\n        direction=\"column\"\n        as=\"nav\"\n        fontSize=\"sm\"\n        color=\"gray.600\"\n        aria-label=\"Main Navigation\"\n      >\n        <NavItem icon={MdHome} type=\"home\">\n          Home\n        </NavItem>\n        {/* <NavItem icon={FaRss}>Status</NavItem>\n        <NavItem icon={HiCollection}>Collections</NavItem>\n        <NavItem icon={FaClipboardCheck}>Checklists</NavItem> */}\n        <NavItem icon={HiCode} type=\"wiki\">\n          Module Wiki\n          <Icon\n            as={MdKeyboardArrowRight}\n            ml=\"auto\"\n            transform={integrations.isOpen ? \"rotate(90deg)\" : \"auto\"}\n          />\n        </NavItem>\n        <Collapse in={integrations.isOpen}>\n        <NavItem pl=\"12\" py=\"2\" type=\"wiki/module/plant\">\n            Plant Module\n          </NavItem>\n          <NavItem pl=\"12\" py=\"2\" type=\"wiki/module/intruders\">\n            Intruders Module\n          </NavItem>\n          <NavItem pl=\"12\" py=\"2\" type=\"wiki/module/sensors\">\n            Sensors Module\n          </NavItem>          \n        </Collapse>\n        {/* <NavItem icon={AiFillGift}>Changelog</NavItem> */}\n        <NavItem icon={BsGearFill} type=\"settings\">\n          Settings\n        </NavItem>\n      </Flex>\n    </Box>\n  );\n  return (\n    <Box\n      as=\"section\"\n      bg={useColorModeValue(\"gray.50\", \"gray.700\")}\n      minH=\"100vh\"\n    >\n      <SidebarContent display={{ base: \"none\", md: \"unset\" }} />\n      <Drawer\n        isOpen={sidebar.isOpen}\n        onClose={sidebar.onClose}\n        placement=\"left\"\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <SidebarContent w=\"full\" borderRight=\"none\" />\n        </DrawerContent>\n      </Drawer>\n      <Box ml={{ base: 0, md: 60 }} transition=\".3s ease\">\n        <Flex\n          as=\"header\"\n          align=\"center\"\n          justify=\"space-between\"\n          w=\"full\"\n          px=\"4\"\n          bg={useColorModeValue(\"white\", \"gray.800\")}\n          borderBottomWidth=\"1px\"\n          borderColor={useColorModeValue(\"inherit\", \"gray.700\")}\n          h=\"14\"\n        >\n          <IconButton\n            aria-label=\"Menu\"\n            display={{ base: \"inline-flex\", md: \"none\" }}\n            onClick={sidebar.onOpen}\n            icon={<FiMenu />}\n            size=\"sm\"\n          />\n          <InputGroup w=\"96\" display={{ base: \"none\", md: \"flex\" }}>\n            <InputLeftElement color=\"gray.500\" children={<FiSearch />} />\n            <Input placeholder=\"Search...\" />\n          </InputGroup>\n\n          <Flex align=\"center\">\n            <Popover placement=\"bottom\" closeOnBlur={false}>\n              <PopoverTrigger>\n                <Button mr={2}>\n                  <Icon as={MdNotifications} color=\"gray.500\" size=\"sm\" />\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent\n                color={useColorModeValue(\"gray.800\", \"white\")}\n                bg={useColorModeValue(\"gray.50\", \"gray.700\")}\n                borderColor=\"blue.800\"\n                style={{ overflowY: \"scroll\", maxHeight: \"75vh\" }}\n                rounded=\"lg\"\n                shadow=\"lg\"\n              >\n                <PopoverHeader pt={4} fontWeight=\"bold\" border=\"0\">\n                  Notifications\n                </PopoverHeader>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverBody>\n                  <Table variant=\"simple\">\n                    <Tbody>\n                      {Notifications.map((item) => item)\n                        .reverse()\n                        .map((notification: any) => (\n                          <Tr key={notification._id}>\n                            <Text fontSize=\"sm\" style={{ fontWeight: \"bold\" }}>\n                              {notification.title}\n                            </Text>\n                            <Text fontSize=\"sm\">{notification.info}</Text>\n                            <br />\n                          </Tr>\n                        ))}\n                    </Tbody>\n                  </Table>\n                </PopoverBody>\n                <PopoverFooter\n                  border=\"0\"\n                  d=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  pb={4}\n                >\n                  <Box fontSize=\"sm\">{\"\\0\"}</Box>\n                </PopoverFooter>\n              </PopoverContent>\n            </Popover>\n            <Popover placement=\"bottom\" closeOnBlur={false}>\n              <PopoverTrigger>\n                <Button>\n                  <Icon as={MdPerson} color=\"gray.500\" size=\"sm\" />\n                </Button>\n              </PopoverTrigger>\n              <PopoverContent\n                color={useColorModeValue(\"gray.800\", \"white\")}\n                bg={useColorModeValue(\"gray.50\", \"gray.700\")}\n                borderColor=\"blue.800\"\n                rounded=\"lg\"\n                shadow=\"lg\"\n              >\n                <PopoverHeader pt={4} fontWeight=\"bold\" border=\"0\">\n                  {getcookie(\"name\", true)}\n                </PopoverHeader>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverBody>Welcome to HomeNode!</PopoverBody>\n                <PopoverFooter\n                  border=\"0\"\n                  d=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  pb={4}\n                >\n                  <Box fontSize=\"sm\">{\"\\0\"}</Box>\n                  <ButtonGroup size=\"sm\">\n                    <Button\n                      colorScheme=\"blue\"\n                      onClick={() => goToSettingsOnPopover()}\n                    >\n                      Settings\n                    </Button>\n                    <Button\n                      colorScheme=\"red\"\n                      onClick={() => signoutOnPopover()}\n                    >\n                      Sign out\n                    </Button>\n                  </ButtonGroup>\n                </PopoverFooter>\n              </PopoverContent>\n            </Popover>\n          </Flex>\n        </Flex>\n\n        <Box as=\"main\" p=\"4\">\n          <Switch>\n            <Route path={`${match.path}/home`}>\n              <Home />\n            </Route>\n            <Route path={`${match.path}/wiki/module/intruders`}>\n              <WikiIntruders />\n            </Route>\n            <Route path={`${match.path}/wiki/module/plant`}>\n              <WikiPlant />\n            </Route>\n            <Route path={`${match.path}/wiki/module/sensors`}>\n              <WikiSensors />\n            </Route>\n            <Route path={`${match.path}/settings`}>\n              <Settings />\n            </Route>\n            <Route path={match.path}>\n              <Home />\n            </Route>\n          </Switch>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport Sidebar from \"../components/dashboard/Sidebar\";\n\nfunction Dashboard() {\n  return (\n    <div>\n      <Sidebar />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport {\n  chakra,\n  Box,\n  GridItem,\n  useColorModeValue,\n  Button,\n  Center,\n  Flex,\n  SimpleGrid,\n  VisuallyHidden,\n  Input,\n  useToast,\n} from \"@chakra-ui/react\";\nimport Navbar from \"../components/Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport jwt_decode from \"jwt-decode\";\nimport getcookie from \"../getcookie\";\n\nconst cookies = new Cookies();\n\ninterface CustomJWT {\n  home_id: string;\n}\n\nconst SignIn = () => {\n  let history = useHistory();\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const toast = useToast();\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    console.log(\"POST SIGNIN\");\n    axios\n      .post(\"http://homenode.tech/auth/signin\", {\n        username: Email,\n        password: Password,\n      })\n      .then((res: any) => {\n        cookies.set(\"email\", Email, { path: \"/\" });\n        const token = res.data.response.token;\n        cookies.set(\"token\", token, { path: \"/\" });\n        try {\n          let decoded = jwt_decode<CustomJWT>(token || \"\") || null;\n          console.log(\"DECODE TOKEN:\", decoded);\n          if (decoded) {\n            cookies.set(\"home_id\", decoded.home_id, {\n              path: \"/\",\n            });\n          }\n        } catch (e) {\n          cookies.set(\"home_id\", \"INVALID_HOMEID\", { path: \"/\" });\n        }\n      })\n      .then(() => {\n        axios.defaults.headers.common[\"authorization\"] =\n          \"bearer \" + getcookie(\"token\", true);\n      })\n      .then(() => {\n        axios\n          .get(\n            \"http://homenode.tech/api/user?username=\" + getcookie(\"email\", true)\n          )\n          .then((res: any) => {\n            cookies.set(\"name\", res.data.response.result.name, { path: \"/\" });\n          })\n          .then(() => {\n            axios\n              .get(\n                \"http://homenode.tech/api/home?id=\" + getcookie(\"home_id\", true)\n              )\n              .then((res: any) => {\n                let module_list = res.data.response.result.modules;\n                console.log(\"MODULE LIST:\", module_list);\n                module_list.forEach((module: any) => {\n                  if (module.type === \"sensors\") {\n                    cookies.set(\"sensors_id\", module.module_id, { path: \"/\" });\n                  } else if (module.type === \"intruders\") {\n                    cookies.set(\"intruders_id\", module.module_id, {\n                      path: \"/\",\n                    });\n                  } else if (module.type === \"plants\") {\n                    cookies.set(\"plants_id\", module.module_id, { path: \"/\" });\n                  }\n                });\n                toast({\n                  title: \"Sign In Successful!\",\n                  description: \"Loading dashboard...\",\n                  status: \"success\",\n                  duration: 1500,\n                  isClosable: true,\n                });\n              })\n              .then(() => history.push(\"/dashboard\"))\n              .catch((err: any) => {\n                console.log(\"ERROR SIGNIN\", err);\n                toast({\n                  title: \"Error Signing In\",\n                  description: \"Oops, please try again\",\n                  status: \"error\",\n                  duration: 3000,\n                  isClosable: true,\n                });\n              });\n          })\n          .catch((err: any) => {\n            console.log(\"ERROR SIGNIN\", err);\n            toast({\n              title: \"Error Signing In\",\n              description: \"Oops, please try again\",\n              status: \"error\",\n              duration: 3000,\n              isClosable: true,\n            });\n          });\n      })\n      .catch((err: any) => {\n        console.log(\"ERROR SIGNIN\", err);\n        toast({\n          title: \"Error Signing In\",\n          description: \"Invalid username or password\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Box px={8} py={24} mx=\"auto\">\n        <SimpleGrid\n          alignItems=\"center\"\n          w={{ base: \"full\", xl: 11 / 12 }}\n          columns={{ base: 1, lg: 11 }}\n          gap={{ base: 0, lg: 24 }}\n          mx=\"auto\"\n        >\n          <GridItem\n            colSpan={{ base: \"auto\", lg: 7 }}\n            textAlign={{ base: \"center\", lg: \"left\" }}\n          >\n            <chakra.h1\n              mb={4}\n              fontSize={{ base: \"3xl\", md: \"4xl\" }}\n              fontWeight=\"bold\"\n              lineHeight={{ base: \"shorter\", md: \"none\" }}\n              color={useColorModeValue(\"gray.900\", \"gray.200\")}\n              letterSpacing={{ base: \"normal\", md: \"tight\" }}\n            >\n              Welcome back!\n            </chakra.h1>\n            <chakra.p\n              mb={{ base: 10, md: 4 }}\n              fontSize={{ base: \"lg\", md: \"xl\" }}\n              color=\"gray.500\"\n              letterSpacing=\"wider\"\n            >\n              Let's get you monitoring, controlling, and automating your home\n              right now.\n            </chakra.p>\n          </GridItem>\n          <GridItem colSpan={{ base: \"auto\", md: 4 }}>\n            <Box as=\"form\" mb={6} rounded=\"lg\" shadow=\"xl\">\n              <Center pb={0} color={useColorModeValue(\"gray.700\", \"gray.600\")}>\n                <chakra.p\n                  mb={{ base: 10, md: 4 }}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  color=\"gray.500\"\n                  letterSpacing=\"wider\"\n                >\n                  Sign In\n                </chakra.p>\n              </Center>\n              <SimpleGrid\n                columns={1}\n                px={6}\n                py={4}\n                spacing={4}\n                borderBottom=\"solid 1px\"\n                borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n              >\n                <Flex>\n                  <VisuallyHidden>Email</VisuallyHidden>\n                  <Input\n                    mt={0}\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    isRequired={true}\n                    onChange={(e: any) => setEmail(e.target.value)}\n                    autoComplete=\"email\"\n                  />\n                </Flex>\n                <Flex>\n                  <VisuallyHidden>Password</VisuallyHidden>\n                  <Input\n                    mt={0}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    isRequired={true}\n                    onChange={(e: any) => setPassword(e.target.value)}\n                    autoComplete=\"current-password\"\n                  />\n                </Flex>\n                <Button\n                  colorScheme=\"brand\"\n                  w=\"full\"\n                  py={2}\n                  type=\"submit\"\n                  onClick={(e: any) => handleSubmit(e)}\n                >\n                  Sign In\n                </Button>\n              </SimpleGrid>\n            </Box>\n            <chakra.p fontSize=\"xs\" textAlign=\"center\" color=\"gray.600\">\n              Don't have an account?{\" \"}\n              <chakra.a\n                color=\"brand.500\"\n                onClick={() => history.push(\"/signup\")}\n                cursor=\"pointer\"\n              >\n                Sign up here.\n              </chakra.a>\n            </chakra.p>\n          </GridItem>\n        </SimpleGrid>\n      </Box>\n    </>\n  );\n};\n\nexport default SignIn;\n","import React, { useState } from \"react\";\nimport {\n  chakra,\n  Box,\n  GridItem,\n  useColorModeValue,\n  Button,\n  Center,\n  Flex,\n  SimpleGrid,\n  VisuallyHidden,\n  Input,\n  useToast,\n} from \"@chakra-ui/react\";\nimport Navbar from \"../components/Navbar\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nconst SignUp = () => {\n  let history = useHistory();\n  const [Name, setName] = useState(\"\");\n  const [Email, setEmail] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [HomeID, setHomeID] = useState(\"\");\n  const toast = useToast();\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    console.log(\"POST SIGNUP\");\n    axios\n      .post(\"http://homenode.tech/api/user\", {\n        username: Email,\n        name: Name,\n        password: Password,\n        home_id: HomeID,\n      })\n      .then((res: any) => {\n        const token = res.data.response.token;\n        cookies.set(\"token\", token, { path: \"/\" });\n        cookies.set(\"email\", res.data.response.userResult.username, {\n          path: \"/\",\n        });\n        cookies.set(\"name\", res.data.response.userResult.name, { path: \"/\" });\n        cookies.set(\"home_id\", res.data.response.userResult.home_id, {\n          path: \"/\",\n        });\n        toast({\n          title: \"Sign Up Successful!\",\n          description: \"Loading sign in page...\",\n          status: \"success\",\n          duration: 1500,\n          isClosable: true,\n        });\n        setTimeout(function () {\n          toast({\n            title: \"Sign In Page Loaded Successfully\",\n            description: \"Please sign in...\",\n            status: \"success\",\n            duration: 3000,\n            isClosable: true,\n          });\n        }, 1500);\n        history.push(\"/signin\");\n      });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Box px={8} py={24} mx=\"auto\">\n        <SimpleGrid\n          alignItems=\"center\"\n          w={{ base: \"full\", xl: 11 / 12 }}\n          columns={{ base: 1, lg: 11 }}\n          gap={{ base: 0, lg: 24 }}\n          mx=\"auto\"\n        >\n          <GridItem\n            colSpan={{ base: \"auto\", lg: 7 }}\n            textAlign={{ base: \"center\", lg: \"left\" }}\n          >\n            <chakra.h1\n              mb={4}\n              fontSize={{ base: \"3xl\", md: \"4xl\" }}\n              fontWeight=\"bold\"\n              lineHeight={{ base: \"shorter\", md: \"none\" }}\n              color={useColorModeValue(\"gray.900\", \"gray.200\")}\n              letterSpacing={{ base: \"normal\", md: \"tight\" }}\n            >\n              Ready to start your journey?\n            </chakra.h1>\n            <chakra.p\n              mb={{ base: 10, md: 4 }}\n              fontSize={{ base: \"lg\", md: \"xl\" }}\n              color=\"gray.500\"\n              letterSpacing=\"wider\"\n            >\n              Monitor, control, and automate your home all on one site.\n            </chakra.p>\n          </GridItem>\n          <GridItem colSpan={{ base: \"auto\", md: 4 }}>\n            <Box as=\"form\" mb={6} rounded=\"lg\" shadow=\"xl\">\n              <Center pb={0} color={useColorModeValue(\"gray.700\", \"gray.600\")}>\n                <chakra.p\n                  mb={{ base: 10, md: 4 }}\n                  fontSize={{ base: \"lg\", md: \"xl\" }}\n                  color=\"gray.500\"\n                  letterSpacing=\"wider\"\n                >\n                  Sign Up\n                </chakra.p>\n              </Center>\n              <SimpleGrid\n                columns={1}\n                px={6}\n                py={4}\n                spacing={4}\n                borderBottom=\"solid 1px\"\n                borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n              >\n                <Flex>\n                  <VisuallyHidden>Name</VisuallyHidden>\n                  <Input\n                    mt={0}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    isRequired={true}\n                    onChange={(e: any) => setName(e.target.value)}\n                  />\n                </Flex>\n                <Flex>\n                  <VisuallyHidden>Email Address</VisuallyHidden>\n                  <Input\n                    mt={0}\n                    type=\"email\"\n                    placeholder=\"Email Address\"\n                    isRequired={true}\n                    onChange={(e: any) => setEmail(e.target.value)}\n                  />\n                </Flex>\n                <Flex>\n                  <VisuallyHidden>Password</VisuallyHidden>\n                  <Input\n                    mt={0}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    isRequired={true}\n                    onChange={(e: any) => setPassword(e.target.value)}\n                  />\n                </Flex>\n                <Flex>\n                  <VisuallyHidden>Home ID</VisuallyHidden>\n                  <Input\n                    mt={0}\n                    type=\"text\"\n                    placeholder=\"Home ID (given upon purchase of hardware)\"\n                    isRequired={true}\n                    onChange={(e: any) => setHomeID(e.target.value)}\n                  />\n                </Flex>\n                <Button\n                  colorScheme=\"brand\"\n                  w=\"full\"\n                  py={2}\n                  type=\"submit\"\n                  onClick={(e) => handleSubmit(e)}\n                >\n                  Sign Up\n                </Button>\n              </SimpleGrid>\n            </Box>\n            <chakra.p fontSize=\"xs\" textAlign=\"center\" color=\"gray.600\">\n              By signing up you agree to our{\" \"}\n              <chakra.a color=\"brand.500\" cursor=\"pointer\">\n                Terms of Service\n              </chakra.a>\n            </chakra.p>\n            <chakra.p fontSize=\"xs\" textAlign=\"center\" color=\"gray.600\">\n              Already have an account?{\" \"}\n              <chakra.a\n                color=\"brand.500\"\n                onClick={() => history.push(\"/signin\")}\n                cursor=\"pointer\"\n              >\n                Sign in here.\n              </chakra.a>\n            </chakra.p>\n          </GridItem>\n        </SimpleGrid>\n      </Box>\n    </>\n  );\n};\n\nexport default SignUp;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport UserContext from \"./User\";\nimport getcookie from \"./getcookie\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Landing from \"./pages/Landing\";\nimport ViewThreat from \"./pages/ViewThreat\";\nimport Dashboard from \"./pages/Dashboard\";\nimport SignIn from \"./pages/SignIn\";\nimport SignUp from \"./pages/SignUp\";\n\nconst user = {\n  currentPage: \"home\",\n  defaultValue: \"\",\n};\n\nfunction App() {\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (\n        getcookie(\"token\", true) !== \"Loading...\" &&\n        getcookie(\"token\", true) !== \"\"\n      ) {\n        axios.defaults.headers.common[\"authorization\"] =\n          \"bearer \" + getcookie(\"token\", true);\n      } else {\n        try {\n          delete axios.defaults.headers.common[\"authorization\"];\n        } catch (e) {\n          console.log(\"TOKEN DOES NOT EXIST\");\n        }\n      }\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n  return (\n    <div className=\"App\">\n      <UserContext.Provider value={user}>\n        <Router>\n          <Switch>\n            <Route path=\"/dashboard/viewthreats\">\n              <ViewThreat />\n            </Route>\n            <Route path=\"/dashboard\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/signin\">\n              <SignIn />\n            </Route>\n            <Route path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route path=\"/\">\n              <Landing />\n            </Route>\n          </Switch>\n        </Router>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { extendTheme } from \"@chakra-ui/react\";\nimport { colors } from \"./colors\";\n\nconst theme = extendTheme({ colors });\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const colors = {\n  transparent: \"transparent\",\n  current: \"currentColor\",\n  black: \"#000000\",\n  white: \"#FFFFFF\",\n\n  brand: {\n    50: \"#E0ECFF\",\n    100: \"#E0ECFF\",\n    200: \"#C1D7FF\",\n    300: \"#A3C1FF\",\n    400: \"#8CAFFF\",\n    500: \"#6690FF\",\n    600: \"#4A6EDB\",\n    700: \"#3350B7\",\n    800: \"#203693\",\n    900: \"#13247A\",\n  },\n\n  brandOld: {\n    50: \"#ecefff\",\n    100: \"#cbceeb\",\n    200: \"#a9aed6\",\n    300: \"#888ec5\",\n    400: \"#666db3\",\n    500: \"#4d5499\",\n    600: \"#3c4178\",\n    700: \"#2a2f57\",\n    800: \"#181c37\",\n    900: \"#080819\",\n  },\n\n  whiteAlpha: {\n    50: \"rgba(255, 255, 255, 0.04)\",\n    100: \"rgba(255, 255, 255, 0.06)\",\n    200: \"rgba(255, 255, 255, 0.08)\",\n    300: \"rgba(255, 255, 255, 0.16)\",\n    400: \"rgba(255, 255, 255, 0.24)\",\n    500: \"rgba(255, 255, 255, 0.36)\",\n    600: \"rgba(255, 255, 255, 0.48)\",\n    700: \"rgba(255, 255, 255, 0.64)\",\n    800: \"rgba(255, 255, 255, 0.80)\",\n    900: \"rgba(255, 255, 255, 0.92)\",\n  },\n\n  blackAlpha: {\n    50: \"rgba(0, 0, 0, 0.04)\",\n    100: \"rgba(0, 0, 0, 0.06)\",\n    200: \"rgba(0, 0, 0, 0.08)\",\n    300: \"rgba(0, 0, 0, 0.16)\",\n    400: \"rgba(0, 0, 0, 0.24)\",\n    500: \"rgba(0, 0, 0, 0.36)\",\n    600: \"rgba(0, 0, 0, 0.48)\",\n    700: \"rgba(0, 0, 0, 0.64)\",\n    800: \"rgba(0, 0, 0, 0.80)\",\n    900: \"rgba(0, 0, 0, 0.92)\",\n  },\n\n  gray: {\n    50: \"#F7FAFC\",\n    100: \"#EDF2F7\",\n    200: \"#E2E8F0\",\n    300: \"#CBD5E0\",\n    400: \"#A0AEC0\",\n    500: \"#718096\",\n    600: \"#4A5568\",\n    700: \"#2D3748\",\n    800: \"#1A202C\",\n    900: \"#171923\",\n  },\n\n  red: {\n    50: \"#FFF5F5\",\n    100: \"#FED7D7\",\n    200: \"#FEB2B2\",\n    300: \"#FC8181\",\n    400: \"#F56565\",\n    500: \"#E53E3E\",\n    600: \"#C53030\",\n    700: \"#9B2C2C\",\n    800: \"#822727\",\n    900: \"#63171B\",\n  },\n\n  orange: {\n    50: \"#FFFAF0\",\n    100: \"#FEEBC8\",\n    200: \"#FBD38D\",\n    300: \"#F6AD55\",\n    400: \"#ED8936\",\n    500: \"#DD6B20\",\n    600: \"#C05621\",\n    700: \"#9C4221\",\n    800: \"#7B341E\",\n    900: \"#652B19\",\n  },\n\n  yellow: {\n    50: \"#FFFFF0\",\n    100: \"#FEFCBF\",\n    200: \"#FAF089\",\n    300: \"#F6E05E\",\n    400: \"#ECC94B\",\n    500: \"#D69E2E\",\n    600: \"#B7791F\",\n    700: \"#975A16\",\n    800: \"#744210\",\n    900: \"#5F370E\",\n  },\n\n  green: {\n    50: \"#F0FFF4\",\n    100: \"#C6F6D5\",\n    200: \"#9AE6B4\",\n    300: \"#68D391\",\n    400: \"#48BB78\",\n    500: \"#38A169\",\n    600: \"#2F855A\",\n    700: \"#276749\",\n    800: \"#22543D\",\n    900: \"#1C4532\",\n  },\n\n  teal: {\n    50: \"#E6FFFA\",\n    100: \"#B2F5EA\",\n    200: \"#81E6D9\",\n    300: \"#4FD1C5\",\n    400: \"#38B2AC\",\n    500: \"#319795\",\n    600: \"#2C7A7B\",\n    700: \"#285E61\",\n    800: \"#234E52\",\n    900: \"#1D4044\",\n  },\n\n  blue: {\n    50: \"#ebf8ff\",\n    100: \"#bee3f8\",\n    200: \"#90cdf4\",\n    300: \"#63b3ed\",\n    400: \"#4299e1\",\n    500: \"#3182ce\",\n    600: \"#2b6cb0\",\n    700: \"#2c5282\",\n    800: \"#2a4365\",\n    900: \"#1A365D\",\n  },\n\n  cyan: {\n    50: \"#EDFDFD\",\n    100: \"#C4F1F9\",\n    200: \"#9DECF9\",\n    300: \"#76E4F7\",\n    400: \"#0BC5EA\",\n    500: \"#00B5D8\",\n    600: \"#00A3C4\",\n    700: \"#0987A0\",\n    800: \"#086F83\",\n    900: \"#065666\",\n  },\n\n  purple: {\n    50: \"#FAF5FF\",\n    100: \"#E9D8FD\",\n    200: \"#D6BCFA\",\n    300: \"#B794F4\",\n    400: \"#9F7AEA\",\n    500: \"#805AD5\",\n    600: \"#6B46C1\",\n    700: \"#553C9A\",\n    800: \"#44337A\",\n    900: \"#322659\",\n  },\n\n  pink: {\n    50: \"#FFF5F7\",\n    100: \"#FED7E2\",\n    200: \"#FBB6CE\",\n    300: \"#F687B3\",\n    400: \"#ED64A6\",\n    500: \"#D53F8C\",\n    600: \"#B83280\",\n    700: \"#97266D\",\n    800: \"#702459\",\n    900: \"#521B41\",\n  },\n};"],"sourceRoot":""}